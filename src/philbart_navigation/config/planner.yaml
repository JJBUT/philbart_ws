controller_frequency: 10
recovery_behaviour_enabled: false

#Global planner-generates path
NavfnROS:
  allow_unknown: true # Specifies whether or not to allow navfn to create plans that traverse unknown space.
  default_tolerance: 0.2 # A tolerance on the goal point for the planner.
  visualize_potential: true

#Local Planner- generates command velocities based on a cost function calculted from the global planner's path, local costmap obstacles, and local costmap goal
TrajectoryPlannerROS:
  allow_unknown: true
  # Robot Configuration Parameters
  acc_lim_x: 1.0
  acc_lim_theta: 6.28

  max_vel_x: 1.0
  min_vel_x: 0.0

  max_vel_theta: 3.0 
  min_vel_theta: -3.0 
  min_in_place_vel_theta: .4

  holonomic_robot: false
  escape_vel: -0.1

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 1.0
  xy_goal_tolerance: 0.25
  latch_xy_goal_tolerance: false

  # Forward Simulation Parameters
  sim_time: 4.0
  sim_granularity: 0.25
  angular_sim_granularity: 0.1
  vx_samples: 6 
  vtheta_samples: 20 
  controller_frequency: 10 #30

  # Trajectory scoring parameters
  meter_scoring: true # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. Cells are assumed by default (false).
  occdist_scale: 0.001 #The weighting for how much the controller should attempt to avoid obstacles. default 0.01
  pdist_scale: 1.2      #The weighting for how much the controller should stay close to the path it was given . default 0.6
  gdist_scale: .4     #The weighting for how much the controller should attempt to reach its local goal, also controls speed  default 0.8

  heading_lookahead: 2.0  #How far to look ahead in meters when scoring different in-place-rotation trajectories
  heading_scoring: false  #Whether to score based on the robot's heading to the path or its distance from the path. default false
  heading_scoring_timestep: 0.8   #How far to look ahead in time in seconds along the simulated trajectory when using heading scoring (double, default: 0.8)
  dwa: true #Whether to use the Dynamic Window Approach (DWA)_ or whether to use Trajectory Rollout
  simple_attractor: false
  publish_cost_grid_pc: false

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.25 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
  escape_reset_dist: 0.1
  escape_reset_theta: 0.1

